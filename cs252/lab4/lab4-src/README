Part1:
	In step3, the output is a infinite output of A,B,C,D,E becasue there're 5 threads running at the same time outputing the alphabets. 
	In step5, since the program runs thread 1(main) first, it goes into a infinite loop and never breaks, so it won't go to thread 2 and 3.

Part3:
                            System Time     User Time   Real Time
mutex lock                     0.75           1.39        1.397
w/ thr_yield                   0.65           2.76        1.766
w/o thr_yield                   0             6.01        3.070

	Diff in user time for w/ and w/o thr_yield: with thr_yield, it releases the CPU when the lock is not released. The CPU can be used in the other thread occupying the lock, so that the user time would be smaller when there's thr_yield.
	Diff in sys time for mutex lock and spin lock: The spin lock is shorter in system time. Becasue instead of waiting, it's a loop that's detecting if the lock is realeased.

